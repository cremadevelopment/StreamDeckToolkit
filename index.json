{
  "api/StreamDeckLib.Messages.Info.Application.html": {
    "href": "api/StreamDeckLib.Messages.Info.Application.html",
    "title": "Class Info.Application | StreamDeckToolkit",
    "keywords": "Class Info.Application Inheritance System.Object Info.Application Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class Application : object Properties language Declaration public string language { get; set; } Property Value Type Description System.String platform Declaration public string platform { get; set; } Property Value Type Description System.String version Declaration public string version { get; set; } Property Value Type Description System.String"
  },
  "api/StreamDeckLib.ConnectionManager.html": {
    "href": "api/StreamDeckLib.ConnectionManager.html",
    "title": "Class ConnectionManager | StreamDeckToolkit",
    "keywords": "Class ConnectionManager This class manages the connection to the StreamDeck hardware Inheritance System.Object ConnectionManager Namespace : StreamDeckLib Assembly : StreamDeckLib.dll Syntax public class ConnectionManager : IDisposable Constructors ConnectionManager(IOptions<StreamDeckToolkitOptions>, ActionManager, ILogger<ConnectionManager>, IStreamDeckProxy) Declaration public ConnectionManager(IOptions<StreamDeckToolkitOptions> options, ActionManager actionManager, ILogger<ConnectionManager> logger, IStreamDeckProxy streamDeckProxy = null) Parameters Type Name Description IOptions < StreamDeckToolkitOptions > options ActionManager actionManager ILogger < ConnectionManager > logger IStreamDeckProxy streamDeckProxy Properties Info Declaration public Info Info { get; } Property Value Type Description Info Methods BroadcastMessage(StreamDeckEventPayload) Declaration public void BroadcastMessage(StreamDeckEventPayload msg) Parameters Type Name Description StreamDeckEventPayload msg Dispose() Declaration public void Dispose() GetAllActions() Declaration public Dictionary<string, BaseStreamDeckAction> GetAllActions() Returns Type Description Dictionary < System.String , BaseStreamDeckAction > GetGlobalSettingsAsync(String) Declaration public Task GetGlobalSettingsAsync(string context) Parameters Type Name Description System.String context Returns Type Description Task GetInstanceOfAction(String, String) Declaration public BaseStreamDeckAction GetInstanceOfAction(string context, string actionUuid) Parameters Type Name Description System.String context System.String actionUuid Returns Type Description BaseStreamDeckAction GetSettingsAsync(String) Declaration public Task GetSettingsAsync(string context) Parameters Type Name Description System.String context Returns Type Description Task Initialize(String[], ILoggerFactory, IStreamDeckProxy) Declaration public static ConnectionManager Initialize(string[] commandLineArgs, ILoggerFactory loggerFactory = null, IStreamDeckProxy streamDeckProxy = null) Parameters Type Name Description System.String [] commandLineArgs ILoggerFactory loggerFactory IStreamDeckProxy streamDeckProxy Returns Type Description ConnectionManager LogMessageAsync(String, String) Declaration public Task LogMessageAsync(string context, string logMessage) Parameters Type Name Description System.String context System.String logMessage Returns Type Description Task OpenUrlAsync(String, String) Declaration public Task OpenUrlAsync(string context, string url) Parameters Type Name Description System.String context System.String url Returns Type Description Task RegisterActionType(String, Type) Declaration public ConnectionManager RegisterActionType(string actionUuid, Type actionType) Parameters Type Name Description System.String actionUuid Type actionType Returns Type Description ConnectionManager RegisterAllActions(Assembly) Declaration public ConnectionManager RegisterAllActions(Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description ConnectionManager RegisterGlobalSettings(IGlobalSettings) Declaration public ConnectionManager RegisterGlobalSettings(IGlobalSettings settings) Parameters Type Name Description IGlobalSettings settings Returns Type Description ConnectionManager SendToPropertyInspectorAsync(String, Object) Declaration public Task SendToPropertyInspectorAsync(string context, dynamic settings) Parameters Type Name Description System.String context System.Object settings Returns Type Description Task SetGlobalSettingsAsync(String, Object) Declaration public Task SetGlobalSettingsAsync(string context, dynamic value) Parameters Type Name Description System.String context System.Object value Returns Type Description Task SetImageAsync(String, String) Declaration public Task SetImageAsync(string context, string imageLocation) Parameters Type Name Description System.String context System.String imageLocation Returns Type Description Task SetSettingsAsync(String, Object) Declaration public Task SetSettingsAsync(string context, dynamic value) Parameters Type Name Description System.String context System.Object value Returns Type Description Task SetStateAsync(String, Int32) Declaration public Task SetStateAsync(string context, int state) Parameters Type Name Description System.String context System.Int32 state Returns Type Description Task SetTitleAsync(String, String) Declaration public Task SetTitleAsync(string context, string newTitle) Parameters Type Name Description System.String context System.String newTitle Returns Type Description Task ShowAlertAsync(String) Declaration public Task ShowAlertAsync(string context) Parameters Type Name Description System.String context Returns Type Description Task ShowOkAsync(String) Declaration public Task ShowOkAsync(string context) Parameters Type Name Description System.String context Returns Type Description Task StartAsync() Declaration public Task<ConnectionManager> StartAsync() Returns Type Description Task < ConnectionManager > StartAsync(CancellationToken) Declaration public Task<ConnectionManager> StartAsync(CancellationToken token) Parameters Type Name Description CancellationToken token Returns Type Description Task < ConnectionManager > SwitchToProfileAsync(String, String, String) Declaration public Task SwitchToProfileAsync(string context, string device, string profileName) Parameters Type Name Description System.String context System.String device System.String profileName Returns Type Description Task"
  },
  "api/SampleDIPlugin.MySamplePluginAction2.html": {
    "href": "api/SampleDIPlugin.MySamplePluginAction2.html",
    "title": "Class MySamplePluginAction2 | StreamDeckToolkit",
    "keywords": "Class MySamplePluginAction2 Inheritance System.Object BaseStreamDeckAction BaseStreamDeckActionWithSettingsModel < CounterSettingsModel > MySamplePluginAction2 Inherited Members BaseStreamDeckActionWithSettingsModel<CounterSettingsModel>.SettingsModel BaseStreamDeckActionWithSettingsModel<CounterSettingsModel>.SetModelProperties(StreamDeckEventPayload) BaseStreamDeckAction.ActionUuid BaseStreamDeckAction.Manager BaseStreamDeckAction.Logger BaseStreamDeckAction.OnKeyDown(StreamDeckEventPayload) BaseStreamDeckAction.OnWillDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnTitleParametersDidChange(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidConnect(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidDisconnect(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidLaunchAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidTerminateAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnDidReceiveGlobalSettings(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidAppear(StreamDeckEventPayload) BaseStreamDeckAction.OnSendToPlugin(StreamDeckEventPayload) Namespace : SampleDIPlugin Assembly : SampleDIPlugin.dll Syntax public class MySamplePluginAction2 : BaseStreamDeckActionWithSettingsModel<CounterSettingsModel> Methods OnDidReceiveSettings(StreamDeckEventPayload) Declaration public override Task OnDidReceiveSettings(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides StreamDeckLib.BaseStreamDeckActionWithSettingsModel<SampleDIPlugin.Models.CounterSettingsModel>.OnDidReceiveSettings(StreamDeckLib.Messages.StreamDeckEventPayload) OnKeyUp(StreamDeckEventPayload) Declaration public override Task OnKeyUp(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides BaseStreamDeckAction.OnKeyUp(StreamDeckEventPayload) OnWillAppear(StreamDeckEventPayload) Declaration public override Task OnWillAppear(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides StreamDeckLib.BaseStreamDeckActionWithSettingsModel<SampleDIPlugin.Models.CounterSettingsModel>.OnWillAppear(StreamDeckLib.Messages.StreamDeckEventPayload)"
  },
  "api/StreamDeckLib.DuplicateActionRegistrationException.html": {
    "href": "api/StreamDeckLib.DuplicateActionRegistrationException.html",
    "title": "Class DuplicateActionRegistrationException | StreamDeckToolkit",
    "keywords": "Class DuplicateActionRegistrationException Inheritance System.Object DuplicateActionRegistrationException Namespace : StreamDeckLib Assembly : StreamDeckLib.dll Syntax public class DuplicateActionRegistrationException : Exception Constructors DuplicateActionRegistrationException(SerializationInfo, StreamingContext) Declaration protected DuplicateActionRegistrationException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context DuplicateActionRegistrationException(String) Declaration public DuplicateActionRegistrationException(string uuid) Parameters Type Name Description System.String uuid DuplicateActionRegistrationException(String, Exception) Declaration public DuplicateActionRegistrationException(string uuid, Exception innerException) Parameters Type Name Description System.String uuid Exception innerException Properties UUID Declaration public string UUID { get; } Property Value Type Description System.String"
  },
  "api/StreamDeckLib.Messages.ShowOkArgs.html": {
    "href": "api/StreamDeckLib.Messages.ShowOkArgs.html",
    "title": "Class ShowOkArgs | StreamDeckToolkit",
    "keywords": "Class ShowOkArgs Inheritance System.Object BaseStreamDeckArgs ShowOkArgs Inherited Members BaseStreamDeckArgs.context Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class ShowOkArgs : BaseStreamDeckArgs Properties Event Declaration public override string Event { get; } Property Value Type Description System.String Overrides BaseStreamDeckArgs.Event"
  },
  "api/StreamDeckLib.Models.StreamDeckToolkitOptions.html": {
    "href": "api/StreamDeckLib.Models.StreamDeckToolkitOptions.html",
    "title": "Class StreamDeckToolkitOptions | StreamDeckToolkit",
    "keywords": "Class StreamDeckToolkitOptions Inheritance System.Object StreamDeckToolkitOptions Namespace : StreamDeckLib.Models Assembly : StreamDeckLib.dll Syntax public class StreamDeckToolkitOptions : object Properties Info Declaration public string Info { get; set; } Property Value Type Description System.String PluginUUID Declaration public string PluginUUID { get; set; } Property Value Type Description System.String Port Declaration public int Port { get; set; } Property Value Type Description System.Int32 RegisterEvent Declaration public string RegisterEvent { get; set; } Property Value Type Description System.String"
  },
  "api/StreamDeckLib.Test.ConnectionManagerShould.html": {
    "href": "api/StreamDeckLib.Test.ConnectionManagerShould.html",
    "title": "Class ConnectionManagerShould | StreamDeckToolkit",
    "keywords": "Class ConnectionManagerShould Inheritance System.Object ConnectionManagerShould Namespace : StreamDeckLib.Test Assembly : StreamDeckLib.Test.dll Syntax public class ConnectionManagerShould : object Methods ActionsShouldReceiveGlobalSetting_WhenGlobalSettingsAreBroadcast() Declaration public Task ActionsShouldReceiveGlobalSetting_WhenGlobalSettingsAreBroadcast() Returns Type Description Task ShouldHaveConnectionManagerAssigned_WhenGettingAnActionInstance() Declaration public Task ShouldHaveConnectionManagerAssigned_WhenGettingAnActionInstance() Returns Type Description Task ShouldHaveLoggerAssigned_WhenGettingAnActionInstance() Declaration public Task ShouldHaveLoggerAssigned_WhenGettingAnActionInstance() Returns Type Description Task ShouldNotThrowAnyExceptions_WhenRegistringMultipleUniqueActions() Declaration public Task ShouldNotThrowAnyExceptions_WhenRegistringMultipleUniqueActions() Returns Type Description Task ShouldRegisterAllActions_WhenRegisteringAllActions() Declaration public Task ShouldRegisterAllActions_WhenRegisteringAllActions() Returns Type Description Task ShouldRegisterEvent_WhenInitializedWithCorrectArgs() Declaration public Task ShouldRegisterEvent_WhenInitializedWithCorrectArgs() Returns Type Description Task ShouldThrowArgumentException_WhenRegisteringAnActionWithoutAUUID() Declaration public Task ShouldThrowArgumentException_WhenRegisteringAnActionWithoutAUUID() Returns Type Description Task ShouldThrowDuplicateActionRegistrationException_WhenRegisteringMultipleInstancesOfTheSameAction() Declaration public Task ShouldThrowDuplicateActionRegistrationException_WhenRegisteringMultipleInstancesOfTheSameAction() Returns Type Description Task ThrowAnArgumentException_WhenInitializedWithEmptyArgs() Declaration public void ThrowAnArgumentException_WhenInitializedWithEmptyArgs()"
  },
  "api/SamplePlugin.html": {
    "href": "api/SamplePlugin.html",
    "title": "Namespace SamplePlugin | StreamDeckToolkit",
    "keywords": "Namespace SamplePlugin Classes MySamplePluginAction MySamplePluginAction2"
  },
  "api/SampleWebPlugin.Models.SampleActionSettingsModel.html": {
    "href": "api/SampleWebPlugin.Models.SampleActionSettingsModel.html",
    "title": "Class SampleActionSettingsModel | StreamDeckToolkit",
    "keywords": "Class SampleActionSettingsModel Inheritance System.Object SampleActionSettingsModel Namespace : SampleWebPlugin.Models Assembly : SampleWebPlugin.dll Syntax public class SampleActionSettingsModel : object Properties Counter Declaration public int Counter { get; set; } Property Value Type Description System.Int32"
  },
  "api/StreamDeckLib.IncompleteActionDefinitionException.html": {
    "href": "api/StreamDeckLib.IncompleteActionDefinitionException.html",
    "title": "Class IncompleteActionDefinitionException | StreamDeckToolkit",
    "keywords": "Class IncompleteActionDefinitionException Inheritance System.Object IncompleteActionDefinitionException Namespace : StreamDeckLib Assembly : StreamDeckLib.dll Syntax public class IncompleteActionDefinitionException : Exception Constructors IncompleteActionDefinitionException(SerializationInfo, StreamingContext) Declaration protected IncompleteActionDefinitionException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context IncompleteActionDefinitionException(String) Declaration public IncompleteActionDefinitionException(string message) Parameters Type Name Description System.String message IncompleteActionDefinitionException(String, Exception) Declaration public IncompleteActionDefinitionException(string message, Exception innerException) Parameters Type Name Description System.String message Exception innerException"
  },
  "api/StreamDeckLib.Messages.SetImageArgs.Payload.html": {
    "href": "api/StreamDeckLib.Messages.SetImageArgs.Payload.html",
    "title": "Class SetImageArgs.Payload | StreamDeckToolkit",
    "keywords": "Class SetImageArgs.Payload Inheritance System.Object SetImageArgs.Payload Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class Payload : object Properties image Declaration public string image { get; set; } Property Value Type Description System.String target Declaration public int target { get; } Property Value Type Description System.Int32 TargetType Declaration public SetTitleArgs.TargetType TargetType { get; set; } Property Value Type Description SetTitleArgs.TargetType"
  },
  "api/StreamDeckLib.Messages.SwitchToProfileArgs.html": {
    "href": "api/StreamDeckLib.Messages.SwitchToProfileArgs.html",
    "title": "Class SwitchToProfileArgs | StreamDeckToolkit",
    "keywords": "Class SwitchToProfileArgs Inheritance System.Object BaseStreamDeckArgs SwitchToProfileArgs Inherited Members BaseStreamDeckArgs.context Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class SwitchToProfileArgs : BaseStreamDeckArgs Properties device Declaration public string device { get; set; } Property Value Type Description System.String Event Declaration public override string Event { get; } Property Value Type Description System.String Overrides BaseStreamDeckArgs.Event payload Declaration public SwitchToProfileArgs.Payload payload { get; set; } Property Value Type Description SwitchToProfileArgs.Payload"
  },
  "api/StreamDeckLib.html": {
    "href": "api/StreamDeckLib.html",
    "title": "Namespace StreamDeckLib | StreamDeckToolkit",
    "keywords": "Namespace StreamDeckLib Classes ActionManager ActionNotRegisteredException ActionUuidAttribute BaseStreamDeckAction BaseStreamDeckActionWithSettingsModel<T> BaseStreamDeckPlugin ConnectionManager This class manages the connection to the StreamDeck hardware DuplicateActionInstanceRegistrationException DuplicateActionRegistrationException IncompleteActionDefinitionException TypeDoesNotInheritFromBaseStreamDeckAction Interfaces IGlobalSettings IStreamDeckProxy"
  },
  "api/StreamDeckLib.Messages.SendToPropertyInspectorArgs.html": {
    "href": "api/StreamDeckLib.Messages.SendToPropertyInspectorArgs.html",
    "title": "Class SendToPropertyInspectorArgs | StreamDeckToolkit",
    "keywords": "Class SendToPropertyInspectorArgs Inheritance System.Object BaseStreamDeckArgs SendToPropertyInspectorArgs Inherited Members BaseStreamDeckArgs.context Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class SendToPropertyInspectorArgs : BaseStreamDeckArgs Properties Event Declaration public override string Event { get; } Property Value Type Description System.String Overrides BaseStreamDeckArgs.Event payload Declaration public dynamic payload { get; set; } Property Value Type Description System.Object"
  },
  "api/StreamDeckLib.Messages.SetImageArgs.html": {
    "href": "api/StreamDeckLib.Messages.SetImageArgs.html",
    "title": "Class SetImageArgs | StreamDeckToolkit",
    "keywords": "Class SetImageArgs Inheritance System.Object BaseStreamDeckArgs SetImageArgs Inherited Members BaseStreamDeckArgs.context Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class SetImageArgs : BaseStreamDeckArgs Properties Event Declaration public override string Event { get; } Property Value Type Description System.String Overrides BaseStreamDeckArgs.Event payload Declaration public SetImageArgs.Payload payload { get; set; } Property Value Type Description SetImageArgs.Payload"
  },
  "api/SampleDIPlugin.Models.html": {
    "href": "api/SampleDIPlugin.Models.html",
    "title": "Namespace SampleDIPlugin.Models | StreamDeckToolkit",
    "keywords": "Namespace SampleDIPlugin.Models Classes CounterSettingsModel SampleActionSettingsModel"
  },
  "api/StreamDeckLib.HostedServices.StreamDeckHostedService.html": {
    "href": "api/StreamDeckLib.HostedServices.StreamDeckHostedService.html",
    "title": "Class StreamDeckHostedService | StreamDeckToolkit",
    "keywords": "Class StreamDeckHostedService Inheritance System.Object StreamDeckHostedService Implements IAsyncDisposable Namespace : StreamDeckLib.HostedServices Assembly : StreamDeckLib.dll Syntax public class StreamDeckHostedService : IHostedService, IAsyncDisposable Constructors StreamDeckHostedService(ILogger<StreamDeckHostedService>, ConnectionManager, IOptions<StreamDeckRegistrationOptions>) Declaration public StreamDeckHostedService(ILogger<StreamDeckHostedService> logger, ConnectionManager connectionManager, IOptions<StreamDeckRegistrationOptions> options) Parameters Type Name Description ILogger < StreamDeckHostedService > logger ConnectionManager connectionManager IOptions < StreamDeckRegistrationOptions > options Methods DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask StartAsync(CancellationToken) Declaration public Task StartAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task StopAsync(CancellationToken) Declaration public Task StopAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Implements IAsyncDisposable"
  },
  "api/StreamDeckLib.Messages.SetStateArgs.html": {
    "href": "api/StreamDeckLib.Messages.SetStateArgs.html",
    "title": "Class SetStateArgs | StreamDeckToolkit",
    "keywords": "Class SetStateArgs Inheritance System.Object BaseStreamDeckArgs SetStateArgs Inherited Members BaseStreamDeckArgs.context Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class SetStateArgs : BaseStreamDeckArgs Properties Event Declaration public override string Event { get; } Property Value Type Description System.String Overrides BaseStreamDeckArgs.Event payload Declaration public SetStateArgs.Payload payload { get; set; } Property Value Type Description SetStateArgs.Payload"
  },
  "api/StreamDeckLib.Messages.Info.Device.html": {
    "href": "api/StreamDeckLib.Messages.Info.Device.html",
    "title": "Class Info.Device | StreamDeckToolkit",
    "keywords": "Class Info.Device Inheritance System.Object Info.Device Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class Device : object Properties id Declaration public string id { get; set; } Property Value Type Description System.String size Declaration public Size size { get; set; } Property Value Type Description Size type Declaration public int type { get; set; } Property Value Type Description System.Int32"
  },
  "api/StreamDeckLib.Messages.ShowAlertArgs.html": {
    "href": "api/StreamDeckLib.Messages.ShowAlertArgs.html",
    "title": "Class ShowAlertArgs | StreamDeckToolkit",
    "keywords": "Class ShowAlertArgs Inheritance System.Object BaseStreamDeckArgs ShowAlertArgs Inherited Members BaseStreamDeckArgs.context Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class ShowAlertArgs : BaseStreamDeckArgs Properties Event Declaration public override string Event { get; } Property Value Type Description System.String Overrides BaseStreamDeckArgs.Event"
  },
  "api/StreamDeckLib.Test.StubProxy.html": {
    "href": "api/StreamDeckLib.Test.StubProxy.html",
    "title": "Class StubProxy | StreamDeckToolkit",
    "keywords": "Class StubProxy A StreamDeck proxy base class Inheritance System.Object StubProxy Implements IStreamDeckProxy IDisposable Namespace : StreamDeckLib.Test Assembly : StreamDeckLib.Test.dll Syntax public class StubProxy : object, IStreamDeckProxy, IDisposable Fields TEST_EVENT Declaration public const string TEST_EVENT = null Field Value Type Description System.String TEST_PORT Declaration public const int TEST_PORT = null Field Value Type Description System.Int32 TEST_UUID Declaration public const string TEST_UUID = null Field Value Type Description System.String ValidCommandLineArguments Declaration public static readonly string[] ValidCommandLineArguments Field Value Type Description System.String [] Properties InspectConnectAsync Declaration public Action<Uri, CancellationToken> InspectConnectAsync { get; set; } Property Value Type Description Action < Uri , CancellationToken > InspectRegister Declaration public Action<string, string> InspectRegister { get; set; } Property Value Type Description Action < System.String , System.String > State Declaration public WebSocketState State { get; set; } Property Value Type Description WebSocketState Methods ConnectAsync(Uri, CancellationToken) Declaration public Task ConnectAsync(Uri uri, CancellationToken token) Parameters Type Name Description Uri uri CancellationToken token Returns Type Description Task Dispose() Declaration public void Dispose() GetMessageAsString(CancellationToken) Declaration public Task<string> GetMessageAsString(CancellationToken token) Parameters Type Name Description CancellationToken token Returns Type Description Task < System.String > Register(String, String) Declaration public Task Register(string registerEvent, string uuid) Parameters Type Name Description System.String registerEvent System.String uuid Returns Type Description Task SendStreamDeckEvent(BaseStreamDeckArgs) Declaration public Task SendStreamDeckEvent(BaseStreamDeckArgs args) Parameters Type Name Description BaseStreamDeckArgs args Returns Type Description Task Implements IStreamDeckProxy IDisposable"
  },
  "api/SamplePlugin.Models.CounterSettingsModel.html": {
    "href": "api/SamplePlugin.Models.CounterSettingsModel.html",
    "title": "Class CounterSettingsModel | StreamDeckToolkit",
    "keywords": "Class CounterSettingsModel Inheritance System.Object CounterSettingsModel Namespace : SamplePlugin.Models Assembly : SamplePlugin.dll Syntax public class CounterSettingsModel : object Properties Counter Declaration public int Counter { get; set; } Property Value Type Description System.Int32"
  },
  "api/StreamDeckLib.Messages.StreamDeckEventPayloadExtensions.html": {
    "href": "api/StreamDeckLib.Messages.StreamDeckEventPayloadExtensions.html",
    "title": "Class StreamDeckEventPayloadExtensions | StreamDeckToolkit",
    "keywords": "Class StreamDeckEventPayloadExtensions Inheritance System.Object StreamDeckEventPayloadExtensions Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public static class StreamDeckEventPayloadExtensions : object Methods GetPayloadSettingsValue(StreamDeckEventPayload, String) Declaration public static object GetPayloadSettingsValue(this StreamDeckEventPayload obj, string propertyName) Parameters Type Name Description StreamDeckEventPayload obj System.String propertyName Returns Type Description System.Object GetPayloadSettingsValue<T>(StreamDeckEventPayload, String) Declaration public static T GetPayloadSettingsValue<T>(this StreamDeckEventPayload obj, string propertyName) where T : IConvertible Parameters Type Name Description StreamDeckEventPayload obj System.String propertyName Returns Type Description T Type Parameters Name Description T PayloadSettingsHasProperty(StreamDeckEventPayload, String) Declaration public static bool PayloadSettingsHasProperty(this StreamDeckEventPayload obj, string propertyName) Parameters Type Name Description StreamDeckEventPayload obj System.String propertyName Returns Type Description System.Boolean"
  },
  "api/StreamDeckLib.TypeDoesNotInheritFromBaseStreamDeckAction.html": {
    "href": "api/StreamDeckLib.TypeDoesNotInheritFromBaseStreamDeckAction.html",
    "title": "Class TypeDoesNotInheritFromBaseStreamDeckAction | StreamDeckToolkit",
    "keywords": "Class TypeDoesNotInheritFromBaseStreamDeckAction Inheritance System.Object TypeDoesNotInheritFromBaseStreamDeckAction Namespace : StreamDeckLib Assembly : StreamDeckLib.dll Syntax public class TypeDoesNotInheritFromBaseStreamDeckAction : Exception Constructors TypeDoesNotInheritFromBaseStreamDeckAction() Declaration public TypeDoesNotInheritFromBaseStreamDeckAction() TypeDoesNotInheritFromBaseStreamDeckAction(SerializationInfo, StreamingContext) Declaration protected TypeDoesNotInheritFromBaseStreamDeckAction(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context TypeDoesNotInheritFromBaseStreamDeckAction(String) Declaration public TypeDoesNotInheritFromBaseStreamDeckAction(string message) Parameters Type Name Description System.String message TypeDoesNotInheritFromBaseStreamDeckAction(String, Exception) Declaration public TypeDoesNotInheritFromBaseStreamDeckAction(string message, Exception innerException) Parameters Type Name Description System.String message Exception innerException TypeDoesNotInheritFromBaseStreamDeckAction(String, String, String) Declaration public TypeDoesNotInheritFromBaseStreamDeckAction(string simpleName, string fullName, string assemblyName) Parameters Type Name Description System.String simpleName System.String fullName System.String assemblyName"
  },
  "api/StreamDeckLib.Messages.BaseStreamDeckArgs.html": {
    "href": "api/StreamDeckLib.Messages.BaseStreamDeckArgs.html",
    "title": "Class BaseStreamDeckArgs | StreamDeckToolkit",
    "keywords": "Class BaseStreamDeckArgs Inheritance System.Object BaseStreamDeckArgs GetGlobalSettingsArgs GetSettingsArgs LogMessageArgs OpenUrlArgs SendToPropertyInspectorArgs SetGlobalSettingsArgs SetImageArgs SetSettingsArgs SetStateArgs SetTitleArgs ShowAlertArgs ShowOkArgs SwitchToProfileArgs Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public abstract class BaseStreamDeckArgs : object Properties context Declaration public string context { get; set; } Property Value Type Description System.String Event Declaration public abstract string Event { get; } Property Value Type Description System.String"
  },
  "api/StreamDeckLib.Messages.SetGlobalSettingsArgs.html": {
    "href": "api/StreamDeckLib.Messages.SetGlobalSettingsArgs.html",
    "title": "Class SetGlobalSettingsArgs | StreamDeckToolkit",
    "keywords": "Class SetGlobalSettingsArgs Inheritance System.Object BaseStreamDeckArgs SetGlobalSettingsArgs Inherited Members BaseStreamDeckArgs.context Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class SetGlobalSettingsArgs : BaseStreamDeckArgs Properties Event Declaration public override string Event { get; } Property Value Type Description System.String Overrides BaseStreamDeckArgs.Event payload Declaration public dynamic payload { get; set; } Property Value Type Description System.Object"
  },
  "api/StreamDeckLib.Messages.Info.PluginRegistration.html": {
    "href": "api/StreamDeckLib.Messages.Info.PluginRegistration.html",
    "title": "Class Info.PluginRegistration | StreamDeckToolkit",
    "keywords": "Class Info.PluginRegistration Inheritance System.Object Info.PluginRegistration Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class PluginRegistration : object Properties event Declaration public string event { get; set; } Property Value Type Description System.String uuid Declaration public string uuid { get; set; } Property Value Type Description System.String"
  },
  "api/StreamDeckLib.BaseStreamDeckActionWithSettingsModel-1.html": {
    "href": "api/StreamDeckLib.BaseStreamDeckActionWithSettingsModel-1.html",
    "title": "Class BaseStreamDeckActionWithSettingsModel<T> | StreamDeckToolkit",
    "keywords": "Class BaseStreamDeckActionWithSettingsModel<T> Inheritance System.Object BaseStreamDeckAction BaseStreamDeckActionWithSettingsModel<T> MySamplePluginAction MySamplePluginAction2 MySamplePluginAction MySamplePluginAction2 MySamplePluginAction MySamplePluginAction2 Inherited Members BaseStreamDeckAction.ActionUuid BaseStreamDeckAction.Manager BaseStreamDeckAction.Logger BaseStreamDeckAction.OnKeyDown(StreamDeckEventPayload) BaseStreamDeckAction.OnKeyUp(StreamDeckEventPayload) BaseStreamDeckAction.OnWillDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnTitleParametersDidChange(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidConnect(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidDisconnect(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidLaunchAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidTerminateAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnDidReceiveGlobalSettings(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidAppear(StreamDeckEventPayload) BaseStreamDeckAction.OnSendToPlugin(StreamDeckEventPayload) Namespace : StreamDeckLib Assembly : StreamDeckLib.dll Syntax public abstract class BaseStreamDeckActionWithSettingsModel<T> : BaseStreamDeckAction Type Parameters Name Description T Properties SettingsModel Declaration public T SettingsModel { get; } Property Value Type Description T Methods OnDidReceiveSettings(StreamDeckEventPayload) Declaration public override Task OnDidReceiveSettings(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides BaseStreamDeckAction.OnDidReceiveSettings(StreamDeckEventPayload) OnWillAppear(StreamDeckEventPayload) Declaration public override Task OnWillAppear(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides BaseStreamDeckAction.OnWillAppear(StreamDeckEventPayload) SetModelProperties(StreamDeckEventPayload) Declaration protected void SetModelProperties(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args"
  },
  "api/SampleWebPlugin.html": {
    "href": "api/SampleWebPlugin.html",
    "title": "Namespace SampleWebPlugin | StreamDeckToolkit",
    "keywords": "Namespace SampleWebPlugin Classes MySamplePluginAction MySamplePluginAction2 Program Startup"
  },
  "api/SampleDIPlugin.MySamplePluginAction.html": {
    "href": "api/SampleDIPlugin.MySamplePluginAction.html",
    "title": "Class MySamplePluginAction | StreamDeckToolkit",
    "keywords": "Class MySamplePluginAction Inheritance System.Object BaseStreamDeckAction BaseStreamDeckActionWithSettingsModel < CounterSettingsModel > MySamplePluginAction Inherited Members BaseStreamDeckActionWithSettingsModel<CounterSettingsModel>.SettingsModel BaseStreamDeckActionWithSettingsModel<CounterSettingsModel>.SetModelProperties(StreamDeckEventPayload) BaseStreamDeckAction.ActionUuid BaseStreamDeckAction.Manager BaseStreamDeckAction.Logger BaseStreamDeckAction.OnKeyDown(StreamDeckEventPayload) BaseStreamDeckAction.OnWillDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnTitleParametersDidChange(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidConnect(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidDisconnect(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidLaunchAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidTerminateAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnDidReceiveGlobalSettings(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidAppear(StreamDeckEventPayload) BaseStreamDeckAction.OnSendToPlugin(StreamDeckEventPayload) Namespace : SampleDIPlugin Assembly : SampleDIPlugin.dll Syntax public class MySamplePluginAction : BaseStreamDeckActionWithSettingsModel<CounterSettingsModel> Methods OnDidReceiveSettings(StreamDeckEventPayload) Declaration public override Task OnDidReceiveSettings(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides StreamDeckLib.BaseStreamDeckActionWithSettingsModel<SampleDIPlugin.Models.CounterSettingsModel>.OnDidReceiveSettings(StreamDeckLib.Messages.StreamDeckEventPayload) OnKeyUp(StreamDeckEventPayload) Declaration public override Task OnKeyUp(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides BaseStreamDeckAction.OnKeyUp(StreamDeckEventPayload) OnWillAppear(StreamDeckEventPayload) Declaration public override Task OnWillAppear(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides StreamDeckLib.BaseStreamDeckActionWithSettingsModel<SampleDIPlugin.Models.CounterSettingsModel>.OnWillAppear(StreamDeckLib.Messages.StreamDeckEventPayload)"
  },
  "api/SampleWebPlugin.Models.CounterSettingsModel.html": {
    "href": "api/SampleWebPlugin.Models.CounterSettingsModel.html",
    "title": "Class CounterSettingsModel | StreamDeckToolkit",
    "keywords": "Class CounterSettingsModel Inheritance System.Object CounterSettingsModel Namespace : SampleWebPlugin.Models Assembly : SampleWebPlugin.dll Syntax public class CounterSettingsModel : object Properties Counter Declaration public int Counter { get; set; } Property Value Type Description System.Int32"
  },
  "api/StreamDeckLib.Config.ConfigurationBuilder.html": {
    "href": "api/StreamDeckLib.Config.ConfigurationBuilder.html",
    "title": "Class ConfigurationBuilder | StreamDeckToolkit",
    "keywords": "Class ConfigurationBuilder Inheritance System.Object ConfigurationBuilder Namespace : StreamDeckLib.Config Assembly : StreamDeckLib.Config.dll Syntax public class ConfigurationBuilder : IDisposable Properties LoggerFactory Declaration public ILoggerFactory LoggerFactory { get; } Property Value Type Description ILoggerFactory Methods BuildDefaultConfiguration(String[]) Declaration public static ConfigurationBuilder BuildDefaultConfiguration(string[] args) Parameters Type Name Description System.String [] args Returns Type Description ConfigurationBuilder Dispose() Declaration public void Dispose()"
  },
  "api/StreamDeckLib.Messages.GetSettingsArgs.html": {
    "href": "api/StreamDeckLib.Messages.GetSettingsArgs.html",
    "title": "Class GetSettingsArgs | StreamDeckToolkit",
    "keywords": "Class GetSettingsArgs Inheritance System.Object BaseStreamDeckArgs GetSettingsArgs Inherited Members BaseStreamDeckArgs.context Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class GetSettingsArgs : BaseStreamDeckArgs Properties Event Declaration public override string Event { get; } Property Value Type Description System.String Overrides BaseStreamDeckArgs.Event"
  },
  "api/StreamDeckLib.Messages.SwitchToProfileArgs.Payload.html": {
    "href": "api/StreamDeckLib.Messages.SwitchToProfileArgs.Payload.html",
    "title": "Class SwitchToProfileArgs.Payload | StreamDeckToolkit",
    "keywords": "Class SwitchToProfileArgs.Payload Inheritance System.Object SwitchToProfileArgs.Payload Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class Payload : object Properties profile Declaration public string profile { get; set; } Property Value Type Description System.String"
  },
  "api/StreamDeckLib.HostedServices.html": {
    "href": "api/StreamDeckLib.HostedServices.html",
    "title": "Namespace StreamDeckLib.HostedServices | StreamDeckToolkit",
    "keywords": "Namespace StreamDeckLib.HostedServices Classes StreamDeckHostedService"
  },
  "api/StreamDeckLib.Test.ActionManagerShould.html": {
    "href": "api/StreamDeckLib.Test.ActionManagerShould.html",
    "title": "Class ActionManagerShould | StreamDeckToolkit",
    "keywords": "Class ActionManagerShould Inheritance System.Object ActionManagerShould Namespace : StreamDeckLib.Test Assembly : StreamDeckLib.Test.dll Syntax public class ActionManagerShould : object Methods ShouldReturnFalse_WhenInquiredAboutRegistrationOfUnregisteredActionUUID() Declaration public void ShouldReturnFalse_WhenInquiredAboutRegistrationOfUnregisteredActionUUID() ShouldReturnTrue_WhenInquiredAboutRegistrationOfActionUUIDWithDifferentCasing() Declaration public void ShouldReturnTrue_WhenInquiredAboutRegistrationOfActionUUIDWithDifferentCasing() ShouldReturnTrue_WhenInquiredAboutRegistrationOfRegisteredActionUUID() Declaration public void ShouldReturnTrue_WhenInquiredAboutRegistrationOfRegisteredActionUUID() ShowOneSingleActionRegistered_WhenRegisteringOnlyOneAction() Declaration public void ShowOneSingleActionRegistered_WhenRegisteringOnlyOneAction() ThrowActionNotRegisteredException_WhenRetrievingAnUnregisteredAction() Declaration public void ThrowActionNotRegisteredException_WhenRetrievingAnUnregisteredAction()"
  },
  "api/StreamDeckLib.Hosting.html": {
    "href": "api/StreamDeckLib.Hosting.html",
    "title": "Namespace StreamDeckLib.Hosting | StreamDeckToolkit",
    "keywords": "Namespace StreamDeckLib.Hosting Classes DependencyInjectionExtensions"
  },
  "api/StreamDeckLib.BaseStreamDeckAction.html": {
    "href": "api/StreamDeckLib.BaseStreamDeckAction.html",
    "title": "Class BaseStreamDeckAction | StreamDeckToolkit",
    "keywords": "Class BaseStreamDeckAction Inheritance System.Object BaseStreamDeckAction BaseStreamDeckActionWithSettingsModel<T> BaseStreamDeckPlugin StubAction Namespace : StreamDeckLib Assembly : StreamDeckLib.dll Syntax public abstract class BaseStreamDeckAction : object Properties ActionUuid Gets the UUID which uniquely identifies the individual actions within a plugin. Declaration public string ActionUuid { get; } Property Value Type Description System.String The UUID representing the action, which matches the value in the \"manifest.json\" file. Logger Declaration public ILogger Logger { get; } Property Value Type Description ILogger Manager The ConnectionManager with which this instance of the BaseStreamDeckAction is registered. Declaration protected ConnectionManager Manager { get; set; } Property Value Type Description ConnectionManager The manager. Methods OnApplicationDidLaunchAsync(StreamDeckEventPayload) Declaration public virtual Task OnApplicationDidLaunchAsync(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task OnApplicationDidTerminateAsync(StreamDeckEventPayload) Declaration public virtual Task OnApplicationDidTerminateAsync(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task OnDeviceDidConnect(StreamDeckEventPayload) Declaration public virtual Task OnDeviceDidConnect(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task OnDeviceDidDisconnect(StreamDeckEventPayload) Declaration public virtual Task OnDeviceDidDisconnect(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task OnDidReceiveGlobalSettings(StreamDeckEventPayload) Declaration public virtual Task OnDidReceiveGlobalSettings(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task OnDidReceiveSettings(StreamDeckEventPayload) Declaration public virtual Task OnDidReceiveSettings(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task OnKeyDown(StreamDeckEventPayload) Declaration public virtual Task OnKeyDown(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task OnKeyUp(StreamDeckEventPayload) Declaration public virtual Task OnKeyUp(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task OnPropertyInspectorDidAppear(StreamDeckEventPayload) Declaration public virtual Task OnPropertyInspectorDidAppear(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task OnPropertyInspectorDidDisappear(StreamDeckEventPayload) Declaration public virtual Task OnPropertyInspectorDidDisappear(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task OnSendToPlugin(StreamDeckEventPayload) Declaration public virtual Task OnSendToPlugin(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task OnTitleParametersDidChange(StreamDeckEventPayload) Declaration public virtual Task OnTitleParametersDidChange(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task OnWillAppear(StreamDeckEventPayload) Declaration public virtual Task OnWillAppear(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task OnWillDisappear(StreamDeckEventPayload) Declaration public virtual Task OnWillDisappear(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task"
  },
  "api/StreamDeckLib.Messages.SetTitleArgs.html": {
    "href": "api/StreamDeckLib.Messages.SetTitleArgs.html",
    "title": "Class SetTitleArgs | StreamDeckToolkit",
    "keywords": "Class SetTitleArgs Inheritance System.Object BaseStreamDeckArgs SetTitleArgs Inherited Members BaseStreamDeckArgs.context Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class SetTitleArgs : BaseStreamDeckArgs Properties Event Declaration public override string Event { get; } Property Value Type Description System.String Overrides BaseStreamDeckArgs.Event payload Declaration public SetTitleArgs.Payload payload { get; set; } Property Value Type Description SetTitleArgs.Payload"
  },
  "api/StreamDeckLib.BaseStreamDeckPlugin.html": {
    "href": "api/StreamDeckLib.BaseStreamDeckPlugin.html",
    "title": "Class BaseStreamDeckPlugin | StreamDeckToolkit",
    "keywords": "Class BaseStreamDeckPlugin Inheritance System.Object BaseStreamDeckAction BaseStreamDeckPlugin Inherited Members BaseStreamDeckAction.ActionUuid BaseStreamDeckAction.Manager BaseStreamDeckAction.Logger BaseStreamDeckAction.OnKeyDown(StreamDeckEventPayload) BaseStreamDeckAction.OnKeyUp(StreamDeckEventPayload) BaseStreamDeckAction.OnWillAppear(StreamDeckEventPayload) BaseStreamDeckAction.OnWillDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnTitleParametersDidChange(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidConnect(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidDisconnect(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidLaunchAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidTerminateAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnDidReceiveSettings(StreamDeckEventPayload) BaseStreamDeckAction.OnDidReceiveGlobalSettings(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidAppear(StreamDeckEventPayload) BaseStreamDeckAction.OnSendToPlugin(StreamDeckEventPayload) Namespace : StreamDeckLib Assembly : StreamDeckLib.dll Syntax public abstract class BaseStreamDeckPlugin : BaseStreamDeckAction"
  },
  "api/StreamDeckLib.Models.StreamDeckRegistrationOptions.html": {
    "href": "api/StreamDeckLib.Models.StreamDeckRegistrationOptions.html",
    "title": "Class StreamDeckRegistrationOptions | StreamDeckToolkit",
    "keywords": "Class StreamDeckRegistrationOptions Inheritance System.Object StreamDeckRegistrationOptions Namespace : StreamDeckLib.Models Assembly : StreamDeckLib.dll Syntax public class StreamDeckRegistrationOptions : object Properties Assembly Declaration public Assembly Assembly { get; set; } Property Value Type Description Assembly"
  },
  "api/StreamDeckLib.ActionNotRegisteredException.html": {
    "href": "api/StreamDeckLib.ActionNotRegisteredException.html",
    "title": "Class ActionNotRegisteredException | StreamDeckToolkit",
    "keywords": "Class ActionNotRegisteredException Inheritance System.Object ActionNotRegisteredException Namespace : StreamDeckLib Assembly : StreamDeckLib.dll Syntax public class ActionNotRegisteredException : Exception Constructors ActionNotRegisteredException() Declaration public ActionNotRegisteredException() ActionNotRegisteredException(SerializationInfo, StreamingContext) Declaration protected ActionNotRegisteredException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context ActionNotRegisteredException(String) Declaration public ActionNotRegisteredException(string uuid) Parameters Type Name Description System.String uuid ActionNotRegisteredException(String, Exception) Declaration public ActionNotRegisteredException(string uuid, Exception innerException) Parameters Type Name Description System.String uuid Exception innerException Properties UUID Declaration public string UUID { get; } Property Value Type Description System.String"
  },
  "api/SampleWebPlugin.Startup.html": {
    "href": "api/SampleWebPlugin.Startup.html",
    "title": "Class Startup | StreamDeckToolkit",
    "keywords": "Class Startup Inheritance System.Object Startup Namespace : SampleWebPlugin Assembly : SampleWebPlugin.dll Syntax public class Startup : object Constructors Startup(IConfiguration) Declaration public Startup(IConfiguration configuration) Parameters Type Name Description IConfiguration configuration Properties Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description IConfiguration Methods Configure(IApplicationBuilder, IWebHostEnvironment) Declaration public void Configure(IApplicationBuilder app, IWebHostEnvironment env) Parameters Type Name Description IApplicationBuilder app IWebHostEnvironment env ConfigureServices(IServiceCollection) Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description IServiceCollection services"
  },
  "api/StreamDeckLib.Messages.LogMessageArgs.Payload.html": {
    "href": "api/StreamDeckLib.Messages.LogMessageArgs.Payload.html",
    "title": "Class LogMessageArgs.Payload | StreamDeckToolkit",
    "keywords": "Class LogMessageArgs.Payload Inheritance System.Object LogMessageArgs.Payload Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class Payload : object Properties message Declaration public string message { get; set; } Property Value Type Description System.String"
  },
  "api/StreamDeckLib.Messages.SetSettingsArgs.html": {
    "href": "api/StreamDeckLib.Messages.SetSettingsArgs.html",
    "title": "Class SetSettingsArgs | StreamDeckToolkit",
    "keywords": "Class SetSettingsArgs Inheritance System.Object BaseStreamDeckArgs SetSettingsArgs Inherited Members BaseStreamDeckArgs.context Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class SetSettingsArgs : BaseStreamDeckArgs Properties Event Declaration public override string Event { get; } Property Value Type Description System.String Overrides BaseStreamDeckArgs.Event payload Declaration public dynamic payload { get; set; } Property Value Type Description System.Object"
  },
  "api/SampleDIPlugin.html": {
    "href": "api/SampleDIPlugin.html",
    "title": "Namespace SampleDIPlugin | StreamDeckToolkit",
    "keywords": "Namespace SampleDIPlugin Classes MySamplePluginAction MySamplePluginAction2"
  },
  "api/StreamDeckLib.DependencyInjection.html": {
    "href": "api/StreamDeckLib.DependencyInjection.html",
    "title": "Namespace StreamDeckLib.DependencyInjection | StreamDeckToolkit",
    "keywords": "Namespace StreamDeckLib.DependencyInjection Classes DependencyInjectionExtensions"
  },
  "api/SampleWebPlugin.MySamplePluginAction.html": {
    "href": "api/SampleWebPlugin.MySamplePluginAction.html",
    "title": "Class MySamplePluginAction | StreamDeckToolkit",
    "keywords": "Class MySamplePluginAction Inheritance System.Object BaseStreamDeckAction BaseStreamDeckActionWithSettingsModel < CounterSettingsModel > MySamplePluginAction Inherited Members BaseStreamDeckActionWithSettingsModel<CounterSettingsModel>.SettingsModel BaseStreamDeckActionWithSettingsModel<CounterSettingsModel>.SetModelProperties(StreamDeckEventPayload) BaseStreamDeckAction.ActionUuid BaseStreamDeckAction.Manager BaseStreamDeckAction.Logger BaseStreamDeckAction.OnKeyDown(StreamDeckEventPayload) BaseStreamDeckAction.OnWillDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnTitleParametersDidChange(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidConnect(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidDisconnect(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidLaunchAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidTerminateAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnDidReceiveGlobalSettings(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidAppear(StreamDeckEventPayload) BaseStreamDeckAction.OnSendToPlugin(StreamDeckEventPayload) Namespace : SampleWebPlugin Assembly : SampleWebPlugin.dll Syntax public class MySamplePluginAction : BaseStreamDeckActionWithSettingsModel<CounterSettingsModel> Methods OnDidReceiveSettings(StreamDeckEventPayload) Declaration public override Task OnDidReceiveSettings(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides StreamDeckLib.BaseStreamDeckActionWithSettingsModel<SampleWebPlugin.Models.CounterSettingsModel>.OnDidReceiveSettings(StreamDeckLib.Messages.StreamDeckEventPayload) OnKeyUp(StreamDeckEventPayload) Declaration public override Task OnKeyUp(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides BaseStreamDeckAction.OnKeyUp(StreamDeckEventPayload) OnWillAppear(StreamDeckEventPayload) Declaration public override Task OnWillAppear(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides StreamDeckLib.BaseStreamDeckActionWithSettingsModel<SampleWebPlugin.Models.CounterSettingsModel>.OnWillAppear(StreamDeckLib.Messages.StreamDeckEventPayload)"
  },
  "api/StreamDeckLib.Models.html": {
    "href": "api/StreamDeckLib.Models.html",
    "title": "Namespace StreamDeckLib.Models | StreamDeckToolkit",
    "keywords": "Namespace StreamDeckLib.Models Classes StreamDeckRegistrationOptions StreamDeckToolkitOptions"
  },
  "api/StreamDeckLib.Messages.PropertyInspectorEventPayloadExtensions.html": {
    "href": "api/StreamDeckLib.Messages.PropertyInspectorEventPayloadExtensions.html",
    "title": "Class PropertyInspectorEventPayloadExtensions | StreamDeckToolkit",
    "keywords": "Class PropertyInspectorEventPayloadExtensions Inheritance System.Object PropertyInspectorEventPayloadExtensions Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public static class PropertyInspectorEventPayloadExtensions : object Methods EventPayloadHasProperty(PropertyInspectorEventPayload, String) Declaration public static bool EventPayloadHasProperty(this PropertyInspectorEventPayload obj, string propertyName) Parameters Type Name Description PropertyInspectorEventPayload obj System.String propertyName Returns Type Description System.Boolean GetEventPayloadValue<T>(PropertyInspectorEventPayload, String) Declaration public static T GetEventPayloadValue<T>(this PropertyInspectorEventPayload obj, string propertyName) where T : IConvertible Parameters Type Name Description PropertyInspectorEventPayload obj System.String propertyName Returns Type Description T Type Parameters Name Description T GetSettingsPayloadValue<T>(PropertyInspectorEventPayload, String) Declaration public static T GetSettingsPayloadValue<T>(this PropertyInspectorEventPayload obj, string propertyName) where T : IConvertible Parameters Type Name Description PropertyInspectorEventPayload obj System.String propertyName Returns Type Description T Type Parameters Name Description T SettingsPayloadHasProperty(PropertyInspectorEventPayload, String) Declaration public static bool SettingsPayloadHasProperty(this PropertyInspectorEventPayload obj, string propertyName) Parameters Type Name Description PropertyInspectorEventPayload obj System.String propertyName Returns Type Description System.Boolean"
  },
  "api/StreamDeckLib.DuplicateActionInstanceRegistrationException.html": {
    "href": "api/StreamDeckLib.DuplicateActionInstanceRegistrationException.html",
    "title": "Class DuplicateActionInstanceRegistrationException | StreamDeckToolkit",
    "keywords": "Class DuplicateActionInstanceRegistrationException Inheritance System.Object DuplicateActionInstanceRegistrationException Namespace : StreamDeckLib Assembly : StreamDeckLib.dll Syntax public class DuplicateActionInstanceRegistrationException : Exception Constructors DuplicateActionInstanceRegistrationException(SerializationInfo, StreamingContext) Declaration protected DuplicateActionInstanceRegistrationException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info StreamingContext context DuplicateActionInstanceRegistrationException(String) Declaration public DuplicateActionInstanceRegistrationException(string key) Parameters Type Name Description System.String key DuplicateActionInstanceRegistrationException(String, Exception) Declaration public DuplicateActionInstanceRegistrationException(string uuid, Exception innerException) Parameters Type Name Description System.String uuid Exception innerException Properties Key Declaration public string Key { get; } Property Value Type Description System.String"
  },
  "api/SamplePlugin.MySamplePluginAction2.html": {
    "href": "api/SamplePlugin.MySamplePluginAction2.html",
    "title": "Class MySamplePluginAction2 | StreamDeckToolkit",
    "keywords": "Class MySamplePluginAction2 Inheritance System.Object BaseStreamDeckAction BaseStreamDeckActionWithSettingsModel < CounterSettingsModel > MySamplePluginAction2 Inherited Members BaseStreamDeckActionWithSettingsModel<CounterSettingsModel>.SettingsModel BaseStreamDeckActionWithSettingsModel<CounterSettingsModel>.SetModelProperties(StreamDeckEventPayload) BaseStreamDeckAction.ActionUuid BaseStreamDeckAction.Manager BaseStreamDeckAction.Logger BaseStreamDeckAction.OnKeyDown(StreamDeckEventPayload) BaseStreamDeckAction.OnWillDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnTitleParametersDidChange(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidConnect(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidDisconnect(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidLaunchAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidTerminateAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnDidReceiveGlobalSettings(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidAppear(StreamDeckEventPayload) BaseStreamDeckAction.OnSendToPlugin(StreamDeckEventPayload) Namespace : SamplePlugin Assembly : SamplePlugin.dll Syntax public class MySamplePluginAction2 : BaseStreamDeckActionWithSettingsModel<CounterSettingsModel> Methods OnDidReceiveSettings(StreamDeckEventPayload) Declaration public override Task OnDidReceiveSettings(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides StreamDeckLib.BaseStreamDeckActionWithSettingsModel<SamplePlugin.Models.CounterSettingsModel>.OnDidReceiveSettings(StreamDeckLib.Messages.StreamDeckEventPayload) OnKeyUp(StreamDeckEventPayload) Declaration public override Task OnKeyUp(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides BaseStreamDeckAction.OnKeyUp(StreamDeckEventPayload) OnWillAppear(StreamDeckEventPayload) Declaration public override Task OnWillAppear(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides StreamDeckLib.BaseStreamDeckActionWithSettingsModel<SamplePlugin.Models.CounterSettingsModel>.OnWillAppear(StreamDeckLib.Messages.StreamDeckEventPayload)"
  },
  "api/StreamDeckLib.Messages.StreamDeckEventPayload.html": {
    "href": "api/StreamDeckLib.Messages.StreamDeckEventPayload.html",
    "title": "Class StreamDeckEventPayload | StreamDeckToolkit",
    "keywords": "Class StreamDeckEventPayload Inheritance System.Object StreamDeckEventPayload Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class StreamDeckEventPayload : object Properties action Declaration public string action { get; set; } Property Value Type Description System.String context Declaration public string context { get; set; } Property Value Type Description System.String device Declaration public string device { get; set; } Property Value Type Description System.String deviceInfo Declaration public StreamDeckEventPayload.Deviceinfo deviceInfo { get; set; } Property Value Type Description StreamDeckEventPayload.Deviceinfo Event Declaration public string Event { get; set; } Property Value Type Description System.String payload Declaration public StreamDeckEventPayload.Payload payload { get; set; } Property Value Type Description StreamDeckEventPayload.Payload Extension Methods StreamDeckEventPayloadExtensions.PayloadSettingsHasProperty(StreamDeckEventPayload, String) StreamDeckEventPayloadExtensions.GetPayloadSettingsValue<T>(StreamDeckEventPayload, String) StreamDeckEventPayloadExtensions.GetPayloadSettingsValue(StreamDeckEventPayload, String)"
  },
  "api/StreamDeckLib.Hosting.DependencyInjectionExtensions.html": {
    "href": "api/StreamDeckLib.Hosting.DependencyInjectionExtensions.html",
    "title": "Class DependencyInjectionExtensions | StreamDeckToolkit",
    "keywords": "Class DependencyInjectionExtensions Inheritance System.Object DependencyInjectionExtensions Namespace : StreamDeckLib.Hosting Assembly : StreamDeckLib.dll Syntax public static class DependencyInjectionExtensions : object Methods ConfigureStreamDeckToolkit(IHostBuilder, String[]) Declaration public static IHostBuilder ConfigureStreamDeckToolkit(this IHostBuilder hostBuilder, string[] args) Parameters Type Name Description IHostBuilder hostBuilder System.String [] args Returns Type Description IHostBuilder"
  },
  "api/StreamDeckLib.Messages.StreamDeckEventPayload.Payload.html": {
    "href": "api/StreamDeckLib.Messages.StreamDeckEventPayload.Payload.html",
    "title": "Class StreamDeckEventPayload.Payload | StreamDeckToolkit",
    "keywords": "Class StreamDeckEventPayload.Payload Inheritance System.Object StreamDeckEventPayload.Payload Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class Payload : object Properties application Declaration public string application { get; set; } Property Value Type Description System.String coordinates Declaration public Coordinates coordinates { get; set; } Property Value Type Description Coordinates isInMultiAction Declaration public bool isInMultiAction { get; set; } Property Value Type Description System.Boolean settings Declaration public dynamic settings { get; set; } Property Value Type Description System.Object state Declaration public int state { get; set; } Property Value Type Description System.Int32 title Declaration public string title { get; set; } Property Value Type Description System.String titleParameters Declaration public StreamDeckEventPayload.TitleParameters titleParameters { get; set; } Property Value Type Description StreamDeckEventPayload.TitleParameters userDesiredState Declaration public int userDesiredState { get; set; } Property Value Type Description System.Int32"
  },
  "api/StreamDeckLib.Messages.SetStateArgs.Payload.html": {
    "href": "api/StreamDeckLib.Messages.SetStateArgs.Payload.html",
    "title": "Class SetStateArgs.Payload | StreamDeckToolkit",
    "keywords": "Class SetStateArgs.Payload Inheritance System.Object SetStateArgs.Payload Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class Payload : object Properties state Declaration public int state { get; set; } Property Value Type Description System.Int32"
  },
  "api/SampleDIPlugin.Models.SampleActionSettingsModel.html": {
    "href": "api/SampleDIPlugin.Models.SampleActionSettingsModel.html",
    "title": "Class SampleActionSettingsModel | StreamDeckToolkit",
    "keywords": "Class SampleActionSettingsModel Inheritance System.Object SampleActionSettingsModel Namespace : SampleDIPlugin.Models Assembly : SampleDIPlugin.dll Syntax public class SampleActionSettingsModel : object Properties Counter Declaration public int Counter { get; set; } Property Value Type Description System.Int32"
  },
  "api/StreamDeckLib.Messages.StreamDeckEventPayload.TitleParameters.html": {
    "href": "api/StreamDeckLib.Messages.StreamDeckEventPayload.TitleParameters.html",
    "title": "Class StreamDeckEventPayload.TitleParameters | StreamDeckToolkit",
    "keywords": "Class StreamDeckEventPayload.TitleParameters Inheritance System.Object StreamDeckEventPayload.TitleParameters Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class TitleParameters : object Properties fontFamily Declaration public string fontFamily { get; set; } Property Value Type Description System.String fontSize Declaration public int fontSize { get; set; } Property Value Type Description System.Int32 fontStyle Declaration public string fontStyle { get; set; } Property Value Type Description System.String fontUnderline Declaration public bool fontUnderline { get; set; } Property Value Type Description System.Boolean showTitle Declaration public bool showTitle { get; set; } Property Value Type Description System.Boolean titleAlignment Declaration public string titleAlignment { get; set; } Property Value Type Description System.String titleColor Declaration public string titleColor { get; set; } Property Value Type Description System.String"
  },
  "api/SamplePlugin.MySamplePluginAction.html": {
    "href": "api/SamplePlugin.MySamplePluginAction.html",
    "title": "Class MySamplePluginAction | StreamDeckToolkit",
    "keywords": "Class MySamplePluginAction Inheritance System.Object BaseStreamDeckAction BaseStreamDeckActionWithSettingsModel < CounterSettingsModel > MySamplePluginAction Inherited Members BaseStreamDeckActionWithSettingsModel<CounterSettingsModel>.SettingsModel BaseStreamDeckActionWithSettingsModel<CounterSettingsModel>.SetModelProperties(StreamDeckEventPayload) BaseStreamDeckAction.ActionUuid BaseStreamDeckAction.Manager BaseStreamDeckAction.Logger BaseStreamDeckAction.OnKeyDown(StreamDeckEventPayload) BaseStreamDeckAction.OnWillDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnTitleParametersDidChange(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidConnect(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidDisconnect(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidLaunchAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidTerminateAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnDidReceiveGlobalSettings(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidAppear(StreamDeckEventPayload) BaseStreamDeckAction.OnSendToPlugin(StreamDeckEventPayload) Namespace : SamplePlugin Assembly : SamplePlugin.dll Syntax public class MySamplePluginAction : BaseStreamDeckActionWithSettingsModel<CounterSettingsModel> Methods OnDidReceiveSettings(StreamDeckEventPayload) Declaration public override Task OnDidReceiveSettings(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides StreamDeckLib.BaseStreamDeckActionWithSettingsModel<SamplePlugin.Models.CounterSettingsModel>.OnDidReceiveSettings(StreamDeckLib.Messages.StreamDeckEventPayload) OnKeyUp(StreamDeckEventPayload) Declaration public override Task OnKeyUp(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides BaseStreamDeckAction.OnKeyUp(StreamDeckEventPayload) OnWillAppear(StreamDeckEventPayload) Declaration public override Task OnWillAppear(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides StreamDeckLib.BaseStreamDeckActionWithSettingsModel<SamplePlugin.Models.CounterSettingsModel>.OnWillAppear(StreamDeckLib.Messages.StreamDeckEventPayload)"
  },
  "api/StreamDeckLib.DependencyInjection.DependencyInjectionExtensions.html": {
    "href": "api/StreamDeckLib.DependencyInjection.DependencyInjectionExtensions.html",
    "title": "Class DependencyInjectionExtensions | StreamDeckToolkit",
    "keywords": "Class DependencyInjectionExtensions Inheritance System.Object DependencyInjectionExtensions Namespace : StreamDeckLib.DependencyInjection Assembly : StreamDeckLib.dll Syntax public static class DependencyInjectionExtensions : object Methods AddStreamDeck(IServiceCollection, IConfiguration, Assembly) Declaration public static IServiceCollection AddStreamDeck(this IServiceCollection services, IConfiguration configuration, Assembly registrationAssembly) Parameters Type Name Description IServiceCollection services IConfiguration configuration Assembly registrationAssembly Returns Type Description IServiceCollection"
  },
  "api/StreamDeckLib.Messages.GetGlobalSettingsArgs.html": {
    "href": "api/StreamDeckLib.Messages.GetGlobalSettingsArgs.html",
    "title": "Class GetGlobalSettingsArgs | StreamDeckToolkit",
    "keywords": "Class GetGlobalSettingsArgs Inheritance System.Object BaseStreamDeckArgs GetGlobalSettingsArgs Inherited Members BaseStreamDeckArgs.context Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class GetGlobalSettingsArgs : BaseStreamDeckArgs Properties Event Declaration public override string Event { get; } Property Value Type Description System.String Overrides BaseStreamDeckArgs.Event"
  },
  "api/SamplePlugin.Models.SampleActionSettingsModel.html": {
    "href": "api/SamplePlugin.Models.SampleActionSettingsModel.html",
    "title": "Class SampleActionSettingsModel | StreamDeckToolkit",
    "keywords": "Class SampleActionSettingsModel Inheritance System.Object SampleActionSettingsModel Namespace : SamplePlugin.Models Assembly : SamplePlugin.dll Syntax public class SampleActionSettingsModel : object Properties Counter Declaration public int Counter { get; set; } Property Value Type Description System.Int32"
  },
  "api/StreamDeckLib.Messages.OpenUrlArgs.Payload.html": {
    "href": "api/StreamDeckLib.Messages.OpenUrlArgs.Payload.html",
    "title": "Class OpenUrlArgs.Payload | StreamDeckToolkit",
    "keywords": "Class OpenUrlArgs.Payload Inheritance System.Object OpenUrlArgs.Payload Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class Payload : object Properties url Declaration public string url { get; set; } Property Value Type Description System.String"
  },
  "api/SampleWebPlugin.Program.html": {
    "href": "api/SampleWebPlugin.Program.html",
    "title": "Class Program | StreamDeckToolkit",
    "keywords": "Class Program Inheritance System.Object Program Namespace : SampleWebPlugin Assembly : SampleWebPlugin.dll Syntax public class Program : object Methods CreateHostBuilder(String[]) Declaration public static IHostBuilder CreateHostBuilder(string[] args) Parameters Type Name Description System.String [] args Returns Type Description IHostBuilder Main(String[]) Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args"
  },
  "api/SampleWebPlugin.MySamplePluginAction2.html": {
    "href": "api/SampleWebPlugin.MySamplePluginAction2.html",
    "title": "Class MySamplePluginAction2 | StreamDeckToolkit",
    "keywords": "Class MySamplePluginAction2 Inheritance System.Object BaseStreamDeckAction BaseStreamDeckActionWithSettingsModel < CounterSettingsModel > MySamplePluginAction2 Inherited Members BaseStreamDeckActionWithSettingsModel<CounterSettingsModel>.SettingsModel BaseStreamDeckActionWithSettingsModel<CounterSettingsModel>.SetModelProperties(StreamDeckEventPayload) BaseStreamDeckAction.ActionUuid BaseStreamDeckAction.Manager BaseStreamDeckAction.Logger BaseStreamDeckAction.OnKeyDown(StreamDeckEventPayload) BaseStreamDeckAction.OnWillDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnTitleParametersDidChange(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidConnect(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidDisconnect(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidLaunchAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidTerminateAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnDidReceiveGlobalSettings(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidAppear(StreamDeckEventPayload) BaseStreamDeckAction.OnSendToPlugin(StreamDeckEventPayload) Namespace : SampleWebPlugin Assembly : SampleWebPlugin.dll Syntax public class MySamplePluginAction2 : BaseStreamDeckActionWithSettingsModel<CounterSettingsModel> Methods OnDidReceiveSettings(StreamDeckEventPayload) Declaration public override Task OnDidReceiveSettings(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides StreamDeckLib.BaseStreamDeckActionWithSettingsModel<SampleWebPlugin.Models.CounterSettingsModel>.OnDidReceiveSettings(StreamDeckLib.Messages.StreamDeckEventPayload) OnKeyUp(StreamDeckEventPayload) Declaration public override Task OnKeyUp(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides BaseStreamDeckAction.OnKeyUp(StreamDeckEventPayload) OnWillAppear(StreamDeckEventPayload) Declaration public override Task OnWillAppear(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides StreamDeckLib.BaseStreamDeckActionWithSettingsModel<SampleWebPlugin.Models.CounterSettingsModel>.OnWillAppear(StreamDeckLib.Messages.StreamDeckEventPayload)"
  },
  "api/StreamDeckLib.Messages.html": {
    "href": "api/StreamDeckLib.Messages.html",
    "title": "Namespace StreamDeckLib.Messages | StreamDeckToolkit",
    "keywords": "Namespace StreamDeckLib.Messages Classes BaseStreamDeckArgs Coordinates GetGlobalSettingsArgs GetSettingsArgs Info Info.Application Info.Device Info.PluginRegistration LogMessageArgs LogMessageArgs.Payload OpenUrlArgs OpenUrlArgs.Payload PropertyInspectorEventPayload PropertyInspectorEventPayloadExtensions SendToPropertyInspectorArgs SetGlobalSettingsArgs SetImageArgs SetImageArgs.Payload SetSettingsArgs SetStateArgs SetStateArgs.Payload SetTitleArgs SetTitleArgs.Payload ShowAlertArgs ShowOkArgs Size StreamDeckEventPayload StreamDeckEventPayload.Deviceinfo StreamDeckEventPayload.Payload StreamDeckEventPayload.TitleParameters StreamDeckEventPayloadExtensions SwitchToProfileArgs SwitchToProfileArgs.Payload Enums SetTitleArgs.TargetType"
  },
  "api/StreamDeckLib.Test.StubAction.html": {
    "href": "api/StreamDeckLib.Test.StubAction.html",
    "title": "Class StubAction | StreamDeckToolkit",
    "keywords": "Class StubAction Inheritance System.Object BaseStreamDeckAction StubAction Inherited Members BaseStreamDeckAction.ActionUuid BaseStreamDeckAction.Manager BaseStreamDeckAction.Logger BaseStreamDeckAction.OnKeyDown(StreamDeckEventPayload) BaseStreamDeckAction.OnKeyUp(StreamDeckEventPayload) BaseStreamDeckAction.OnWillAppear(StreamDeckEventPayload) BaseStreamDeckAction.OnWillDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnTitleParametersDidChange(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidConnect(StreamDeckEventPayload) BaseStreamDeckAction.OnDeviceDidDisconnect(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidLaunchAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnApplicationDidTerminateAsync(StreamDeckEventPayload) BaseStreamDeckAction.OnDidReceiveSettings(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidDisappear(StreamDeckEventPayload) BaseStreamDeckAction.OnPropertyInspectorDidAppear(StreamDeckEventPayload) BaseStreamDeckAction.OnSendToPlugin(StreamDeckEventPayload) Namespace : StreamDeckLib.Test Assembly : StreamDeckLib.Test.dll Syntax public class StubAction : BaseStreamDeckAction Fields Counter Declaration public int Counter Field Value Type Description System.Int32 Methods OnDidReceiveGlobalSettings(StreamDeckEventPayload) Declaration public override Task OnDidReceiveGlobalSettings(StreamDeckEventPayload args) Parameters Type Name Description StreamDeckEventPayload args Returns Type Description Task Overrides BaseStreamDeckAction.OnDidReceiveGlobalSettings(StreamDeckEventPayload)"
  },
  "api/StreamDeckLib.ActionManager.html": {
    "href": "api/StreamDeckLib.ActionManager.html",
    "title": "Class ActionManager | StreamDeckToolkit",
    "keywords": "Class ActionManager Inheritance System.Object ActionManager Namespace : StreamDeckLib Assembly : StreamDeckLib.dll Syntax public class ActionManager : IDisposable Constructors ActionManager(ILogger<ActionManager>) Initializes a new instance of the ActionManager class. Declaration public ActionManager(ILogger<ActionManager> logger = null) Parameters Type Name Description ILogger < ActionManager > logger An instance of a logger ( class. Methods Dispose() Declaration public void Dispose() Dispose(Boolean) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description System.Boolean disposing GetAction(ConnectionManager, String) Gets a new instance of an BaseStreamDeckAction registered with a UUID of actionUUID . This instance will not be stored or managed, and cannot be reused. Declaration public BaseStreamDeckAction GetAction(ConnectionManager connectionManager, string actionUUID) Parameters Type Name Description ConnectionManager connectionManager System.String actionUUID The UUID of the action type which is to be instantiated Returns Type Description BaseStreamDeckAction A new instance of the action Remarks Throws a ActionNotRegisteredException exception if there is no action with a UUID of actionUUID registered. GetActionInstance<TActionType>(ConnectionManager, String) Gets an instance of an action from an action UUID. Declaration public TActionType GetActionInstance<TActionType>(ConnectionManager connectionManager, string actionUUID) where TActionType : BaseStreamDeckAction Parameters Type Name Description ConnectionManager connectionManager System.String actionUUID The UUID of the action type which is requested. Returns Type Description TActionType A new instance of an action. Type Parameters Name Description TActionType The specific type of action to be returned. Remarks If no type is found to match the actionUUID , an exception of type ActionNotRegisteredException is thrown. GetAllActions() Declaration public Dictionary<string, BaseStreamDeckAction> GetAllActions() Returns Type Description Dictionary < System.String , BaseStreamDeckAction > IsActionRegistered(String) Checks whether an action is registered for a given UUID. Declaration public bool IsActionRegistered(string actionUUID) Parameters Type Name Description System.String actionUUID The UUID to check Returns Type Description System.Boolean true , if action registered was registered, false otherwise. RegisterAction<TActionType>(String) Registers an action type for a given UUID. Declaration public ActionManager RegisterAction<TActionType>(string actionUUID) where TActionType : BaseStreamDeckAction Parameters Type Name Description System.String actionUUID The UUID for the action. Returns Type Description ActionManager The instance of ActionManager . Type Parameters Name Description TActionType The type to be registered for the actionUUID . Must inherit from BaseStreamDeckAction . RegisterActionInstance(String, BaseStreamDeckAction) Registers the action instance. Declaration public ActionManager RegisterActionInstance(string instanceKey, BaseStreamDeckAction actionInstance) Parameters Type Name Description System.String instanceKey The key to be used when registering the action instance. This is typically the value of the context . BaseStreamDeckAction actionInstance Action instance. Returns Type Description ActionManager The action instance. RegisterActionType(String, Type) Registers an action type for a given UUID. Declaration public ActionManager RegisterActionType(string actionUuid, Type actionType) Parameters Type Name Description System.String actionUuid Type actionType The type to be registered for the actionUUID . Must inherit from BaseStreamDeckAction . Returns Type Description ActionManager The instance of ActionManager . Remarks If the actionType does not inherit from BaseStreamDeckAction , a TypeDoesNotInheritFromBaseStreamDeckAction exception is thrown. RegisterAllActions(Assembly) Registers all actions which are decorated with an ActionUuidAttribute withn a given . Declaration public ActionManager RegisterAllActions(Assembly actionsAssembly) Parameters Type Name Description Assembly actionsAssembly The from within which actions are to be registered. Returns Type Description ActionManager The instance of ActionManager ."
  },
  "api/SampleDIPlugin.Models.CounterSettingsModel.html": {
    "href": "api/SampleDIPlugin.Models.CounterSettingsModel.html",
    "title": "Class CounterSettingsModel | StreamDeckToolkit",
    "keywords": "Class CounterSettingsModel Inheritance System.Object CounterSettingsModel Namespace : SampleDIPlugin.Models Assembly : SampleDIPlugin.dll Syntax public class CounterSettingsModel : object Properties Counter Declaration public int Counter { get; set; } Property Value Type Description System.Int32"
  },
  "articles/plugins.html": {
    "href": "articles/plugins.html",
    "title": "Plugins | StreamDeckToolkit",
    "keywords": "Plugins Please add your plugins to the list: vscode-streamdeck streamdeck-plugins https://streamdeck-plugins.com/ WayBack Machine version BarRaider"
  },
  "articles/projects/dashboard.html": {
    "href": "articles/projects/dashboard.html",
    "title": "StreamDeck Dashboard | StreamDeckToolkit",
    "keywords": "StreamDeck Dashboard A collection of stream deck actions in a single plugin for developers code"
  },
  "articles/template/propertyinspector.html": {
    "href": "articles/template/propertyinspector.html",
    "title": "Property Inspector | StreamDeckToolkit",
    "keywords": "Property Inspector There are various types of fields that are supported in property inspector see Elgato Github PiSamples and Elgato SDK Documentation The above sample from GitHub allows you to drag and drop elements into your html for quick development. Add it to the property_inspector.html file in the project."
  },
  "articles/template/template.html": {
    "href": "articles/template/template.html",
    "title": "Working With This Template | StreamDeckToolkit",
    "keywords": "Working With This Template Welcome Congratulations! You've just taken the first major step in writing a custom plugin for the Elgato Stream Deck . State of Things Within the directory from which you are reading this file, there exist a few other necessary files. These are: _StreamDeckPlugin_.csproj : The C# project file used to build the plugin Program.cs : The code for the application which will be called by the Stream Deck software when loading and running your plugin. DefaultPluginAction.cs : The file in which the functionality of the first (default) action for the plugin will be written. This file provides a basic implementation of an action for your plugin, following a pattern which can be repeated. What's Next? First, a Word of Caution Due to the multi-platform target of the Stream Deck , when specifying filesystem paths which will be used at runtime (images, other assets), use the POSIX/Unix standard forward slash ( / ) as the directory separator. Do this path/to/my/assets Instead of path\\to\\my\\assets The manifest.json file The manifest.json file (also referred to as the manifest or manifest file ) is the mechanism used by the Stream Deck SDK to uniquely identify plugins, their actions and other parameters. Your first step should set a value for both the Author and the URL values, representing you and your plugin. Images and Other Assets The following are the base set of images/icons which are needed for the plugin. While defaults have been provided, they should be changed to help distinguish your plugin and its action(s) from others. Unless otherwise noted, image assets should all be in the \"Portable Network Graphics\" (PNG) format. Note While all efforts have been made to ensure the correctness of this information, please refer to the official Style Guide and Manifest file definition for the latest and most up-to-date information. Category Icon ( a.k.a. Plugin Icon ) Path to property in manifest.json file: Icon Purpose The category icon, identified by the Icon property in the manifest , is the primary visual identifier for your plugin. It is also used to display information about your plugin in the More Actions... list, which displays the list of available plugins to download to uses, as well as the category (group) icon in the Actions list if your plugin supports more than a single action. Specifications The Icon property in the manifest represents the base file name of the image, without a file extension. For example, if your icon's file name is myPluginIcon.png , you would set the value as myPluginIcon . There are two of these files necessary. A default one for a regular, non-scaled (high-DPI) display, and another for scaled display. The default icon should be 28 pixels squared (28x28px), and named with the base file name and extension. i.e. _PluginName_.png . The other file, for high-DPI displayes, must be 56 pixels squared (56x56px), and the value @2x appended to the file name, before the extension. i.e. _PluginName_@2x.png Action Image (Icon) Path to property in manifest.json file: Actions[x].Icon Purpose The action image, for which there is one for each action available from the plugin, is the icon which helps identify the action item in the Actions list, within the category (group) defined by your plugin. Just as with the Category Icon , when setting its value in the manifest , do not specify an extension. Specifications Each element in the Actions element of the manifest has an Icon property which must be set (which one possible exception - see below). While not strictly necessary, each action should have its own, distinct icon for its visual identity. Per the current specifications, the Action Image should be a single color - #d8d8d8 ( rgb(216,216,216) ). Again, just as with the Category Icon , two separate copies of this file are needed, with the same naming rules but different sizes; a default one for a regular, non-scaled (high-DPI) display, and another for scaled display. The default icon should be 20 pixels squared (20x20px), and preferably named in a manner in which it can be easily related to its action, such as actionIcon.png . When setting its value in the manifest , here too specify only the file name, and do not include the etension. The other file, for high-DPI displayes, must be 40 pixels squared (40x40px), and the value @2x appended to the file name, before the extension. i.e. actionIcon@2x.png Exceptions An Action item is not required to have an icon specified (but still can) if its VisibleInActionList property in the manifest is set to false . Key Icon Path to property in manifest.json file: Actions[x].States[y].Image Purpose The Key Icon is the icon which is displayed on the key(s) to which is is assigned on the Stream Deck , as well as within the Stream Deck software during configuration. If your action supports multiple states, the Key Icon will be displayed when its assigned state is active. Each action hast as least one state, and as of this time, has at most two states. Once again, just as with the Category Icon and Action Image , when setting its value in the manifest , do not specify an extension. Specifications Again, just as with the Category Icon and the Action Image ,two separate copies of this file are needed, with the same naming rules but different sizes; a default one for a regular, non-scaled (high-DPI) display, and another for scaled display. The default icon should be 72 pixels squared (72x72px). Again, it should preferably named in a manner in which it can be easily related to either the action or state is represents, such as actionIconButton.png or actionIconActive.png . Can I do any more? Of course! First, congratulations on getting your first action for your Stream Deck plugin working! To allow your plugin to do more, you will need to create (and implement) a new Action definition. Here is how you do this: Create a new class (in a new file or an existing one), and make sure it inherits from the BaseStreamDeckAction class e.g.: internal class MyNextPluginAction : BaseStreamDeckAction Implement the required properties and methods, such as UUID Register it with the ConnectionManager instance within the Program.cs file. Look for the .RegisterAction(new DefaultPluginAction() code line, copy it, and change the type DefaultPluginAction to your new class' name. From the example in step 1, this would look like .RegisterAction(new MyNextPluginAction()) . Add a definition for the new action in the manifest.json file, ensuring that the value for the UUID field in the manifest matches the UUID property of your new class. That's it! Repeat this process for any additional actions you wish to include and perform as part of your plugin. References Here are some helpful references for both this template and the Stream Deck: Plugin Homepage Stream Deck Page Stream Deck SDK Documentation <!-- References -->"
  },
  "articles/create.html": {
    "href": "articles/create.html",
    "title": "Creating a Plugin Action | StreamDeckToolkit",
    "keywords": "Creating a Plugin Action The Stream Deck Toolkit provides the functionality that communicates directly with the Stream Deck software. When creating a plugin, you are responsible for creating actions for the Stream Deck buttons to perform. There are two base classes that you can inherit from when creating your action: BaseStreamDeckAction - this class contains all the integrations necessary to communicate with the Stream Deck at the 'barebones' level. Inheriting from this class will give you the greatest control over how your action sends and receives data from the software. BaseStreamDeckActionWithSettingsModel<T> - this class inherits from BaseStreamDeckAction, this class will automate the population of model properties, where type T is defined as the data that is stored when issuing a 'setSettings' event to the Stream Deck software. The property SettingsModel will automatically instantiate an instance of class T, so it is best to assign default values when defining your class T. Also, when using the Property Inspector and passing data back and forth, ensure that the properties defined in the settingsModel in JavaScript matches those that you have defined in T for the automatic mapping to occur between both environments. Your project may contain any number of actions, inheriting from one of the classes above. In order for the Action to be automatically registered on start up, it must bear the [ActionUuid(Uuid=\"com.fritzanfriends.pluginname.anotheraction\")] attribute. Actions must also be manually registered in the manifest.json file, with the Uuid that matches ActionUuid attribute."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Welcome | StreamDeckToolkit",
    "keywords": "Welcome Welcome to the documentation for the StreamDeck Toolkit, a .NET Standard library, template, and tools for building extensions to the Elgato Stream Deck. What Is This? This is a template to help create plugins for the Elgato Stream Deck , using the Stream Deck SDK with Dotnet Core . <!-- Reference Links -->"
  },
  "articles/pre-reqs.html": {
    "href": "articles/pre-reqs.html",
    "title": "Pre-Requisites | StreamDeckToolkit",
    "keywords": "Pre-Requisites In order to make use of this template, you will need to have the Dotnet Core SDK (version 2.2.100 or above) installed on your development machine. While not absolutely necessary, it is strongly recommended to have the Stream Deck Software installed, to be able to perform some integration testing of your plugin. <!-- Reference Links -->"
  },
  "articles/streams.html": {
    "href": "articles/streams.html",
    "title": "Streams | StreamDeckToolkit",
    "keywords": "Streams You can find all the Twitch streams that built this toolkit on YouTube StreamDeck Toolkit Playlist"
  },
  "articles/using.html": {
    "href": "articles/using.html",
    "title": "Using the Template | StreamDeckToolkit",
    "keywords": "Using the Template Once the template is installed, open a terminal in the folder of your choice and create a new project. dotnet new streamdeck-plugin --plugin-name FirstPlugin --uuid com.yourcompany.pluginname.actionname --skipRestore false Or create a directory in a location of your choice, change to that directory and run the command, which will inherit the directory name as the project name with default values. dotnet new streamdeck-plugin"
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome | StreamDeckToolkit",
    "keywords": "Welcome Welcome to the documentation for the StreamDeck Toolkit, a .NET Standard library, template, and tools for building extensions to the Elgato Stream Deck. What Is This? This is a template to help create plugins for the Elgato Stream Deck , using the Stream Deck SDK with Dotnet Core . Check out the Articles section for how to work with the Toolkit, and the API section to see the code. <!-- Reference Links -->"
  },
  "articles/projects/emulator.html": {
    "href": "articles/projects/emulator.html",
    "title": "Stream Deck Emulator | StreamDeckToolkit",
    "keywords": "Stream Deck Emulator A simple emulator for the Stream Deck Application to allow plugin developers to develop, test, and debug their plugins without requiring a physical Stream Deck device. See the code . <!-- Reference Links -->"
  },
  "articles/template/action.html": {
    "href": "articles/template/action.html",
    "title": "Action | StreamDeckToolkit",
    "keywords": "Action When you use the template there are a number of parameters which can set things in the following Action class: --uuid com.yourcompany.pluginname.actionname --plugin-name FirstPlugin You will also have a model created CounterSettingsModel which will be set. Attribute [ActionUuid(Uuid=\"com.yourcompany.pluginname.actionname\")] Class Name The --plugin-name will be a prefix for the Action class that is created: public class FirstPluginAction : BaseStreamDeckActionWithSettingsModel<Models.CounterSettingsModel> BaseStreamDeckAction public ILogger Logger { get; } public string ActionUuid { get; } protected internal ConnectionManager Manager { get; set; } There are a number of methods you can then override and implement with your own logic: public virtual Task OnApplicationDidLaunch(StreamDeckEventPayload args); public virtual Task OnApplicationDidTerminate(StreamDeckEventPayload args); public virtual Task OnDeviceDidConnect(StreamDeckEventPayload args); public virtual Task OnDeviceDidDisconnect(StreamDeckEventPayload args); public virtual Task OnDidReceiveGlobalSettings(StreamDeckEventPayload args); public virtual Task OnDidReceiveSettings(StreamDeckEventPayload args); public virtual Task OnKeyDown(StreamDeckEventPayload args); public virtual Task OnKeyUp(StreamDeckEventPayload args); public virtual Task OnPropertyInspectorDidAppear(StreamDeckEventPayload args); public virtual Task OnPropertyInspectorDidDisappear(StreamDeckEventPayload args); public virtual Task OnTitleParametersDidChange(StreamDeckEventPayload args); public virtual Task OnWillAppear(StreamDeckEventPayload args); public virtual Task OnWillDisappear(StreamDeckEventPayload args); Just call the base method then implement the functionality you wish to achieve. For example: public override async Task OnDidReceiveSettings(StreamDeckEventPayload args) { await base.OnDidReceiveSettings(args); await Manager.SetTitleAsync(args.context, SettingsModel.Counter.ToString()); } public override async Task OnWillAppear(StreamDeckEventPayload args) { await base.OnWillAppear(args); await Manager.SetTitleAsync(args.context, SettingsModel.Counter.ToString()); } BaseStreamDeckActionWithSettingsModel public T SettingsModel { get; } public override Task OnDidReceiveSettings(StreamDeckEventPayload args); public override Task OnWillAppear(StreamDeckEventPayload args); protected void SetModelProperties(StreamDeckEventPayload args);"
  },
  "articles/install.html": {
    "href": "articles/install.html",
    "title": "Install Project Template | StreamDeckToolkit",
    "keywords": "Install Project Template From File System Installing the template from your filesystem is useful for local testing of the template itself. If you are actively working on the template making changes, this is the route you need to use. To install, run the following command from the root of the repository. dotnet new -i Templates/StreamDeck.PluginTemplate.Csharp To pick up any changes you have made to the template source, you must uninstall the template and reinstall it. To uninstall, run the following command from the root of the respository. Windows: dotnet new -u Templates/StreamDeck.PluginTemplate.Csharp OSX/Linux: dotnet new -u $PWD/Templates/StreamDeck.PluginTemplate.Csharp From NuGet dotnet new -i StreamDeckPluginTemplate OR - Install-Package StreamDeckPluginTemplate [-Version x.y.zzz]"
  },
  "articles/contributing.html": {
    "href": "articles/contributing.html",
    "title": "Contributing | StreamDeckToolkit",
    "keywords": "Contributing There are two ways to contribute to this repo, either the code or the docs. First check for any open Issues on GitHub then comment to indicate you're helping out, or raise a new one with details. Code Pull the code and add your necessary changes, then PR back to dev for review. Docs You're in them! To help out fork this repo, install DocFX and update/add any info. docfx docfx.json will build the site, then move to the \"_site\" folder and run docfx serve then open a browser to \"http://localhost:8080/\" to see your updates. There are the Articles you can write to explain the toolkit, then the API docs which builds from the src. The docfx.json file contains a metadata which points to the src to built to produce { \"metadata\": [ { \"src\": [ { \"files\": [\"**.csproj\"], \"src\": \"../src\" } ], \"dest\": \"api\" } ] } Template This documentation site is using the DocFX Material template . The docfx.json file contains a template that has been updated, alongside the templates folder containing the src of the template. \"template\": [ \"default\", \"templates/material\" ]"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API Documentaion | StreamDeckToolkit",
    "keywords": "API Documentaion Welcome to the API Documentation, please see the navigation for each of the project apis in \"StreamDeck Toolkit\"."
  },
  "api/StreamDeckLib.ActionUuidAttribute.html": {
    "href": "api/StreamDeckLib.ActionUuidAttribute.html",
    "title": "Class ActionUuidAttribute | StreamDeckToolkit",
    "keywords": "Class ActionUuidAttribute Inheritance System.Object ActionUuidAttribute Namespace : StreamDeckLib Assembly : StreamDeckLib.dll Syntax public class ActionUuidAttribute : Attribute Constructors ActionUuidAttribute(String) Declaration public ActionUuidAttribute(string uuid = \"\") Parameters Type Name Description System.String uuid Properties Uuid Declaration public string Uuid { get; set; } Property Value Type Description System.String"
  },
  "api/StreamDeckLib.Messages.Coordinates.html": {
    "href": "api/StreamDeckLib.Messages.Coordinates.html",
    "title": "Class Coordinates | StreamDeckToolkit",
    "keywords": "Class Coordinates Inheritance System.Object Coordinates Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class Coordinates : object Properties column Declaration public int column { get; set; } Property Value Type Description System.Int32 row Declaration public int row { get; set; } Property Value Type Description System.Int32"
  },
  "api/StreamDeckLib.Messages.Info.html": {
    "href": "api/StreamDeckLib.Messages.Info.html",
    "title": "Class Info | StreamDeckToolkit",
    "keywords": "Class Info Inheritance System.Object Info Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class Info : object Properties application Declaration public Info.Application application { get; set; } Property Value Type Description Info.Application devicePixelRatio Declaration public int devicePixelRatio { get; set; } Property Value Type Description System.Int32 devices Declaration public Info.Device[] devices { get; set; } Property Value Type Description Info.Device []"
  },
  "api/StreamDeckLib.Messages.OpenUrlArgs.html": {
    "href": "api/StreamDeckLib.Messages.OpenUrlArgs.html",
    "title": "Class OpenUrlArgs | StreamDeckToolkit",
    "keywords": "Class OpenUrlArgs Inheritance System.Object BaseStreamDeckArgs OpenUrlArgs Inherited Members BaseStreamDeckArgs.context Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class OpenUrlArgs : BaseStreamDeckArgs Properties Event Declaration public override string Event { get; } Property Value Type Description System.String Overrides BaseStreamDeckArgs.Event payload Declaration public OpenUrlArgs.Payload payload { get; set; } Property Value Type Description OpenUrlArgs.Payload"
  },
  "api/StreamDeckLib.Messages.SetTitleArgs.Payload.html": {
    "href": "api/StreamDeckLib.Messages.SetTitleArgs.Payload.html",
    "title": "Class SetTitleArgs.Payload | StreamDeckToolkit",
    "keywords": "Class SetTitleArgs.Payload Inheritance System.Object SetTitleArgs.Payload Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class Payload : object Properties target Declaration public int target { get; } Property Value Type Description System.Int32 TargetType Declaration public SetTitleArgs.TargetType TargetType { get; set; } Property Value Type Description SetTitleArgs.TargetType title Declaration public string title { get; set; } Property Value Type Description System.String"
  },
  "api/StreamDeckLib.Messages.SetTitleArgs.TargetType.html": {
    "href": "api/StreamDeckLib.Messages.SetTitleArgs.TargetType.html",
    "title": "Enum SetTitleArgs.TargetType | StreamDeckToolkit",
    "keywords": "Enum SetTitleArgs.TargetType Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public enum TargetType : int Fields Name Description Hardware HardwareAndSoftware Software"
  },
  "api/SampleWebPlugin.Models.html": {
    "href": "api/SampleWebPlugin.Models.html",
    "title": "Namespace SampleWebPlugin.Models | StreamDeckToolkit",
    "keywords": "Namespace SampleWebPlugin.Models Classes CounterSettingsModel SampleActionSettingsModel"
  },
  "api/SamplePlugin.Models.html": {
    "href": "api/SamplePlugin.Models.html",
    "title": "Namespace SamplePlugin.Models | StreamDeckToolkit",
    "keywords": "Namespace SamplePlugin.Models Classes CounterSettingsModel SampleActionSettingsModel"
  },
  "api/StreamDeckLib.IStreamDeckProxy.html": {
    "href": "api/StreamDeckLib.IStreamDeckProxy.html",
    "title": "Interface IStreamDeckProxy | StreamDeckToolkit",
    "keywords": "Interface IStreamDeckProxy Namespace : StreamDeckLib Assembly : StreamDeckLib.dll Syntax public interface IStreamDeckProxy : IDisposable Properties State Declaration WebSocketState State { get; } Property Value Type Description WebSocketState Methods ConnectAsync(Uri, CancellationToken) Declaration Task ConnectAsync(Uri uri, CancellationToken token) Parameters Type Name Description Uri uri CancellationToken token Returns Type Description Task GetMessageAsString(CancellationToken) Declaration Task<string> GetMessageAsString(CancellationToken token) Parameters Type Name Description CancellationToken token Returns Type Description Task < System.String > Register(String, String) Declaration Task Register(string registerEvent, string uuid) Parameters Type Name Description System.String registerEvent System.String uuid Returns Type Description Task SendStreamDeckEvent(BaseStreamDeckArgs) Declaration Task SendStreamDeckEvent(BaseStreamDeckArgs args) Parameters Type Name Description BaseStreamDeckArgs args Returns Type Description Task"
  },
  "api/StreamDeckLib.Messages.LogMessageArgs.html": {
    "href": "api/StreamDeckLib.Messages.LogMessageArgs.html",
    "title": "Class LogMessageArgs | StreamDeckToolkit",
    "keywords": "Class LogMessageArgs Inheritance System.Object BaseStreamDeckArgs LogMessageArgs Inherited Members BaseStreamDeckArgs.context Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class LogMessageArgs : BaseStreamDeckArgs Properties Event Declaration public override string Event { get; } Property Value Type Description System.String Overrides BaseStreamDeckArgs.Event payload Declaration public LogMessageArgs.Payload payload { get; set; } Property Value Type Description LogMessageArgs.Payload"
  },
  "api/StreamDeckLib.Messages.StreamDeckEventPayload.Deviceinfo.html": {
    "href": "api/StreamDeckLib.Messages.StreamDeckEventPayload.Deviceinfo.html",
    "title": "Class StreamDeckEventPayload.Deviceinfo | StreamDeckToolkit",
    "keywords": "Class StreamDeckEventPayload.Deviceinfo Inheritance System.Object StreamDeckEventPayload.Deviceinfo Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class Deviceinfo : object Properties size Declaration public Size size { get; set; } Property Value Type Description Size type Declaration public int type { get; set; } Property Value Type Description System.Int32"
  },
  "api/StreamDeckLib.Config.html": {
    "href": "api/StreamDeckLib.Config.html",
    "title": "Namespace StreamDeckLib.Config | StreamDeckToolkit",
    "keywords": "Namespace StreamDeckLib.Config Classes ConfigurationBuilder"
  },
  "api/StreamDeckLib.IGlobalSettings.html": {
    "href": "api/StreamDeckLib.IGlobalSettings.html",
    "title": "Interface IGlobalSettings | StreamDeckToolkit",
    "keywords": "Interface IGlobalSettings Namespace : StreamDeckLib Assembly : StreamDeckLib.dll Syntax public interface IGlobalSettings"
  },
  "api/StreamDeckLib.Messages.Size.html": {
    "href": "api/StreamDeckLib.Messages.Size.html",
    "title": "Class Size | StreamDeckToolkit",
    "keywords": "Class Size Inheritance System.Object Size Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class Size : object Properties columns Declaration public int columns { get; set; } Property Value Type Description System.Int32 rows Declaration public int rows { get; set; } Property Value Type Description System.Int32"
  },
  "api/StreamDeckLib.Messages.PropertyInspectorEventPayload.html": {
    "href": "api/StreamDeckLib.Messages.PropertyInspectorEventPayload.html",
    "title": "Class PropertyInspectorEventPayload | StreamDeckToolkit",
    "keywords": "Class PropertyInspectorEventPayload Inheritance System.Object PropertyInspectorEventPayload Namespace : StreamDeckLib.Messages Assembly : StreamDeckLib.dll Syntax public class PropertyInspectorEventPayload : object Properties action Declaration public string action { get; set; } Property Value Type Description System.String context Declaration public string context { get; set; } Property Value Type Description System.String Event Declaration public string Event { get; set; } Property Value Type Description System.String payload Declaration public dynamic payload { get; set; } Property Value Type Description System.Object Extension Methods PropertyInspectorEventPayloadExtensions.SettingsPayloadHasProperty(PropertyInspectorEventPayload, String) PropertyInspectorEventPayloadExtensions.GetSettingsPayloadValue<T>(PropertyInspectorEventPayload, String) PropertyInspectorEventPayloadExtensions.EventPayloadHasProperty(PropertyInspectorEventPayload, String) PropertyInspectorEventPayloadExtensions.GetEventPayloadValue<T>(PropertyInspectorEventPayload, String)"
  },
  "api/StreamDeckLib.Test.html": {
    "href": "api/StreamDeckLib.Test.html",
    "title": "Namespace StreamDeckLib.Test | StreamDeckToolkit",
    "keywords": "Namespace StreamDeckLib.Test Classes ActionManagerShould ConnectionManagerShould StubAction StubProxy A StreamDeck proxy base class"
  }
}